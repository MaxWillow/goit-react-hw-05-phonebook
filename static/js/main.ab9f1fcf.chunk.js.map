{"version":3,"sources":["components/ContactList/ContactItem.module.css","components/Notification/Notification.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Notification/Notification.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/App.jsx","index.js","transitions/pop.module.css"],"names":["module","exports","Notification","text","className","styles","notifyContainer","notifyText","defaultProps","ContactForm","state","name","number","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","onAddContact","props","this","onSubmit","form","htmlFor","label","onChange","input","type","pattern","button","Component","Filter","filterValue","onFilterChange","placeholder","ContactItem","contact","onDeleteContact","outline","onClick","ContactList","filteredContacts","TransitionGroup","component","list","map","CSSTransition","key","timeout","classNames","popTransition","containerStyles","marginLeft","marginRight","width","fontFamily","App","contacts","filter","showNotify","addContact","message","newContact","uuidv4","find","toLowerCase","showNotifyWithMessage","prevState","deleteContact","filterContacts","includes","setTimeout","existedData","localStorage","getItem","JSON","parse","alert","prevProps","setItem","stringify","style","in","appear","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab9f1fcf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"outline\":\"ContactItem_outline__2Fsh9\",\"text\":\"ContactItem_text__3Pyz3\",\"button\":\"ContactItem_button__2JSeu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifyContainer\":\"Notification_notifyContainer__333Rv\",\"notifyText\":\"Notification_notifyText__1tVZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__K6fOe\",\"input\":\"Filter_input__3ug6X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3rds8\",\"label\":\"ContactForm_label__F6Msq\",\"input\":\"ContactForm_input__2ypVo\",\"button\":\"ContactForm_button__2rK6k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__27ktI\"};","import React from 'react';\nimport T from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ text }) => (\n  <div className={styles.notifyContainer}>\n    <p className={styles.notifyText}>{text}</p>\n  </div>\n);\n\nNotification.propTypes = {\n  text: T.string,\n};\n\nNotification.defaultProps = {\n  text: 'Please check your input. Try again.',\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: T.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { onAddContact } = this.props;\n\n    onAddContact(name, number);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor=\"name\" className={styles.label}>\n          Name\n          <input\n            id=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            className={styles.input}\n          />\n        </label>\n        <label htmlFor=\"number\" className={styles.label}>\n          Number\n          <input\n            id=\"number\"\n            type=\"tel\"\n            pattern=\"[0-9]{10}\"\n            value={number}\n            onChange={this.handleChange}\n            className={styles.input}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ filterValue, onFilterChange }) => (\n  <div>\n    <p className={styles.text}>Find contacts by name</p>\n    <input\n      id=\"filter\"\n      value={filterValue}\n      placeholder=\"Print the name that you want to find...\"\n      onChange={onFilterChange}\n      className={styles.input}\n    />\n  </div>\n);\n\nFilter.defaultProps = {\n  filterValue: '',\n};\n\nFilter.propTypes = {\n  filterValue: T.string,\n  onFilterChange: T.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './ContactItem.module.css';\n\nconst ContactItem = ({ contact, onDeleteContact }) => (\n  <li className={styles.outline}>\n    <p className={styles.text}>{`${contact.name}: ${contact.number}`}</p>\n    <button type=\"button\" onClick={onDeleteContact} className={styles.button}>\n      Delete\n    </button>\n  </li>\n);\n\nContactItem.propTypes = {\n  contact: T.shape({\n    name: T.string.isRequired,\n    number: T.string.isRequired,\n  }).isRequired,\n  onDeleteContact: T.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport T from 'prop-types';\nimport ContactItem from './ContactItem';\nimport styles from './ContactList.module.css';\nimport popTransition from '../../transitions/pop.module.css';\n\nconst ContactList = ({ filteredContacts, onDeleteContact }) => (\n  <TransitionGroup component=\"ul\" className={styles.list}>\n    {filteredContacts.map(contact => (\n      <CSSTransition key={contact.id} timeout={250} classNames={popTransition}>\n        <ContactItem\n          contact={contact}\n          onDeleteContact={() => onDeleteContact(contact.id)}\n        />\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nContactList.propTypes = {\n  filteredContacts: T.arrayOf(\n    T.shape({\n      name: T.string.isRequired,\n      number: T.string.isRequired,\n      id: T.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: T.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport uuidv4 from 'uuid/v4';\nimport Notification from './Notification/Notification';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport '../transitions/slide-appear.css';\nimport popTransition from '../transitions/pop.module.css';\n\nconst containerStyles = {\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  width: 355,\n  fontFamily: 'Roboto',\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    showNotify: false,\n    notifyText: '',\n  };\n\n  componentDidMount() {\n    const existedData = localStorage.getItem('contacts');\n\n    if (existedData) {\n      try {\n        const contacts = JSON.parse(existedData);\n        this.setState({\n          contacts,\n        });\n      } catch {\n        // eslint-disable-next-line no-alert\n        alert('Something went wrong...');\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n\n    const newContact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    const existedContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    let message;\n\n    if (existedContact) {\n      message = `${name} is already in contacts`;\n      this.showNotifyWithMessage(message);\n    } else if (name && number) {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, newContact],\n        showNotify: false,\n      }));\n    } else {\n      message = 'Please fill the empty fields';\n      this.showNotifyWithMessage(message);\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  onFilterChange = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  filterContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  showNotifyWithMessage = text => {\n    this.setState({\n      showNotify: true,\n      notifyText: text,\n    });\n    setTimeout(() => {\n      this.setState({ showNotify: false });\n    }, 2500);\n  };\n\n  render() {\n    const { filter, contacts, showNotify, notifyText } = this.state;\n    const filteredContacts = this.filterContacts(contacts, filter);\n\n    return (\n      <div style={containerStyles}>\n        <CSSTransition in timeout={500} classNames=\"slide\" appear>\n          <h2>Phonebook</h2>\n        </CSSTransition>\n\n        <TransitionGroup>\n          {showNotify && (\n            <CSSTransition timeout={250} classNames={popTransition}>\n              <Notification text={notifyText} />\n            </CSSTransition>\n          )}\n        </TransitionGroup>\n\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        <TransitionGroup>\n          {contacts.length > 1 && (\n            <CSSTransition timeout={250} classNames={popTransition}>\n              <Filter\n                filterValue={filter}\n                onFilterChange={this.onFilterChange}\n              />\n            </CSSTransition>\n          )}\n        </TransitionGroup>\n\n        <ContactList\n          filteredContacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__9FZI0\",\"enterActive\":\"pop_enterActive__P9k3L\",\"exit\":\"pop_exit__25AfN\",\"exitActive\":\"pop_exitActive__iwqUh\"};"],"sourceRoot":""}